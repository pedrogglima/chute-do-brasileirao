upstream rails_app {
  server app:3000;
}

# define the public application root
root   /var/www/app/public;

ssl_certificate /usr/share/nginx/certificates/fullchain.pem;
ssl_certificate_key /usr/share/nginx/certificates/privkey.pem;
include /etc/ssl-options/options-ssl-nginx.conf;
ssl_dhparam /etc/ssl-options/ssl-dhparams.pem;

# define where Nginx should write its logs
access_log /var/www/app/log/nginx.access.log;
error_log /var/www/app/log/nginx.error.log;

server {
  listen 80;
  listen 443 ssl;

  server_name chutedobrasileirao.com.br;

  error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 423 424 426 428 429 431 451 /404.html;
  location = /404.html {
    internal;
  }
  
  error_page 500 501 502 503 504 505 506 507 508 510 511 /500.html;
  location = /500.html {
    internal;
  }
  
  location ~* ^.+\.(rb|log)$ {
   deny all;
  }
  
  # serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(packs|assets|images)/ {
    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;

    access_log off;
    gzip_static on; # to serve pre-gzipped version

    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # send non-static file requests to the app server
  location / {
    try_files $uri @rails;
  }

  location @rails {
    proxy_set_header Host $http_host;
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_redirect off;
    proxy_pass http://rails_app;
  }
}